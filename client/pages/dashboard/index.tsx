import { Button, Container, Flex, Icon } from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import NextLink from "next/link";
import { FC, useEffect, useState } from "react";
import { FaFileAlt, FaFileInvoice, FaFileInvoiceDollar, FaUser, FaUserTie } from "react-icons/fa";
import Authorization from "../../components/authorization";
import api from "../../utils/api";

interface InfoProps {
    href: string;
    icon: React.ReactElement;
}

const InfoItem: FC<InfoProps> = ({ children, href, icon }) => {
    return (
        <NextLink href={href}>
            <Button
                leftIcon={icon}
                colorScheme={"teal"}
                borderRadius={0}
                mx="3"
                my="3"
                minWidth={"96"}
                minHeight={"40"}>
                {children}
            </Button>
        </NextLink>
    );
};

const Home: NextPage = () => {
    const [dashboardData, setDashboardData] = useState({
        paidOffCount: undefined,
        paidCount: undefined,
        customerCount: undefined,
        employeeCount: undefined,
        customerNotCheckedCount: undefined,
    });

    useEffect(() => {
        async function fetchDashboardData() {
            const belum_dibayar = await api
                .get("/pelanggan/pemakaian?search=&sudah_dibayar=0&id_pelanggan=", {
                    withCredentials: true,
                })
                .catch(() => ({ data: { result: [] } }));

            const sudah_dibayar = await api
                .get("/pelanggan/pemakaian?search=&sudah_dibayar=1&id_pelanggan=", {
                    withCredentials: true,
                })
                .catch(() => ({ data: { result: [] } }));

            const pelanggan = await api
                .get("/pelanggan", { withCredentials: true })
                .catch(() => ({ data: { result: [] } }));

            const petugas = await api
                .get("/petugas", { withCredentials: true })
                .catch(() => ({ data: { result: [] } }));

            setDashboardData({
                paidCount: sudah_dibayar.data.result.length,
                paidOffCount: belum_dibayar.data.result.length,
                customerCount: pelanggan.data.result.length,
                employeeCount: petugas.data.result.length,
                customerNotCheckedCount: pelanggan.data.result.filter(
                    (p: { sudah_dicatat: boolean }) => {
                        if (!p.sudah_dicatat) return p;
                    }
                ).length,
            });
        }

        fetchDashboardData();
    }, []);

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Container my="5" maxW={"container.xl"}>
                <Flex justifyContent="center" wrap="wrap">
                    <Authorization>
                        <InfoItem icon={<Icon w={20} h={20} as={FaUser} />} href="/pelanggan">
                            Jumlah Pelanggan
                            <br />
                            {dashboardData.customerCount}
                        </InfoItem>
                    </Authorization>

                    <Authorization roles={["admin"]}>
                        <InfoItem icon={<Icon w={20} h={20} as={FaUserTie} />} href="/petugas">
                            Jumlah Petugas
                            <br />
                            {dashboardData.employeeCount}
                        </InfoItem>
                    </Authorization>

                    <Authorization roles={["petugas loket"]}>
                        <InfoItem
                            icon={<Icon w={20} h={20} as={FaFileInvoice} />}
                            href="/pelanggan/tagihan?sudah_dibayar=0">
                            Jumlah Tagihan Belum Dibayar
                            <br />
                            {dashboardData.paidOffCount}
                        </InfoItem>
                    </Authorization>

                    <Authorization roles={["petugas loket"]}>
                        <InfoItem
                            icon={<Icon w={20} h={20} as={FaFileInvoiceDollar} />}
                            href="/pelanggan/tagihan?sudah_dibayar=1">
                            Jumlah Tagihan Sudah Dibayar
                            <br />
                            {dashboardData.paidCount}
                        </InfoItem>
                    </Authorization>

                    <Authorization roles={["petugas meteran"]}>
                        <InfoItem
                            icon={<Icon w={20} h={20} as={FaFileAlt} />}
                            href="/pelanggan?sudah_dicatat=0">
                            Jumlah Pemakaian Belum Dicatat
                            <br />
                            {dashboardData.customerNotCheckedCount}
                        </InfoItem>
                    </Authorization>
                </Flex>
            </Container>
        </>
    );
};

export default Home;
